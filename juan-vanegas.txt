https://codepen.io/paradigmshifter/pen/xxEMRdp?editors=1100

    1. What is Semantic HTML? 
Is markup that is used to give meaning to both the developer and the browser.
    2. What is HTML used for? 
It's used so that web browser can efficiently display information from a website
in a structured way.
    3. What is an attribute and where do we put it? 
Attributes define aditional options for elements, it can be added inside the tag
    4. What is the h1 tag used for? How many times should I use it on a page?
It defines the main headline, it should only be used once on each page.
    5. Name two tags that have required attributes
img and a
    6. What do we put in the head of our HTML document? 
Doctype and other metadata about the page.
    7. What is an id? 
Is used in CSS to identify a single element
    8. What elements can I add an id to? 
They must be individual elements.
    9. How many times can I use the same id on a page? 
Once
    10. What is a class? 
A class is used to style a group of elements.
    11. What elements can I add a class to?
Any HTML element
    12. How many times can I use the same class on a page? 
As many times as wanted.
    13. How do I get my link to open in a new tab?
by adding the target=”_blank” attribute
    14. What is the alt attribute in the image tag used for?
To describe what the image is, used for web browser readers and to comply with WCAG
    15. How do I reference an id?
using the (hash) character followed by the ID name
    16. What is the difference between a section and a div
section defines a section in the documnet like header and footer. div defines a division in the document.    
    17. What is CSS used for?
Is used to style HTML.
    18. How to we select an element? Example - every h2 on the page
write the name of the element, then we can use a (.) to add a class.
Example h2.class
    19. What is the difference between a class and an id? - Give me an example of when I might use each one
An id is used for a specific element, a class can be used for a group of elements.
Example p.class is for every p element, #lastname would be assigned as an id for as single element (ie last name)
    20. How do we select classes in CSS?
using a (.) period after the element name
    21. How do we select a p element with a single class of “human””?
p.human
    22. What is a parent child selector? When would this be useful? 
it groups elements, the parent is the main element and the child are elements linked to it.
It makes it easier to find groups of elements for a specific format or style.
    23. How do you select all links within a div with the class of sidebar?
assign a class do the div.
    24. What is a pseudo selector?
a keyword that specifies the state of an element.
    25. What do we use the change the spacing between lines?
line-height property    
    26. What do we use to change the spacing between letters?
letter-spacing    
    27. What do we use to to change everything to CAPITALS? lowercase? Capitalize?
Text-Transform    
    28. How do I add a 1px border around my div that is dotted and black?
add a style to the div tag (ie. style=border: dotted 1px black) or add it as a class or id in CSS

    29. How do I select everything on the page? 
With the universal selector (*)
    30. How do I write a comment in CSS?
start with /* and end with */
    31. How do I find out what file I am in, when I am using the command line? 
using the pwd command    
    32. Using the command line - how do I see a list of files/folders in my current folder?
using the ls command
    33. How do I remove a file via the command line? Why do I have to be careful with this? 
using the rm command. because it is permanent.
    34. Why should I use version control? 
to be able to back track changes and revert to previous version if anything goes wrong.
    35. How often should I commit to github?
when all the changes have been checked and verified.
    36. What is the command we would use to push our repo up to github? 
git push
    37. Walk me through Lambda's git flow. 
First you fork the repo, then clone it to your local drive, the branch it, make the necesary edits or additions, then commit, and finally push the changes back to your repo.
